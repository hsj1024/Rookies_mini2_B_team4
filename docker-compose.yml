##version: '3'
##services:
##  zookeeper:
##    image: zookeeper:3.7.0
##    ports:
##      - "2181:2181"
##    container_name: zookeeper
##    networks:
##      - kafka-network
##
##  kafka:
##    image: wurstmeister/kafka:latest
##    ports:
##      - "9092:9092"
##    environment:
##      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_new:9092
##      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
##      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
##      KAFKA_BROKER_ID: 1
##      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
##      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
##    depends_on:
##      - zookeeper
##    container_name: kafka_new
##    networks:
##      - kafka-network
##
##  mariadb:
##    image: mariadb:latest
##    environment:
##      MYSQL_ROOT_PASSWORD: rootpassword
##      MYSQL_DATABASE: boot_db
##      MYSQL_USER: boot
##      MYSQL_PASSWORD: boot
##    ports:
##      - "3306:3306"
##    container_name: mariadb_new
##    networks:
##      - kafka-network
##
##  springboot:
##    image: rookies_talk_app
##    ports:
##      - "8080:8080"
##    environment:
##      SPRING_DATASOURCE_URL: jdbc:mysql://mariadb_new:3306/boot_db
##      SPRING_DATASOURCE_USERNAME: boot
##      SPRING_DATASOURCE_PASSWORD: boot
##      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka_new:9092
##    depends_on:
##      - kafka
##      - mariadb
##    networks:
##      - kafka-network
##
##networks:
##  kafka-network:
##    driver: bridge
##
#version: '3'
#services:
#  zookeeper:
#    image: zookeeper:3.7.0
#    ports:
#      - "2181:2181"
#    container_name: zookeeper
#    networks:
#      - kafka-network
#
#  kafka:
#    image: wurstmeister/kafka:latest
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_BROKER_ID: 1
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
#    depends_on:
#      - zookeeper
#    container_name: kafka_new
#    networks:
#      - kafka-network
#
#  mariadb:
#    image: mariadb:10.11.8
#    environment:
#      MYSQL_ROOT_PASSWORD: maria
#      MYSQL_DATABASE: boot_db
#      MYSQL_USER: boot
#      MYSQL_PASSWORD: boot
#    ports:
#      - "3306:3306"
#    container_name: mariadb
#    networks:
#      - kafka-network
#
#  springboot:
#    image: rookies_talk_app
#    ports:
#      - "8080:8080"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:mariadb://mariadb:3306/boot_db
#      SPRING_DATASOURCE_USERNAME: boot
#      SPRING_DATASOURCE_PASSWORD: boot
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: loaclhost:9092
#    depends_on:
#      - kafka
#      - mariadb
#    networks:
#      - kafka-network
#
#networks:
#  kafka-network:
#    driver: bridge

# 2번
#version: '3'
#services:
#  zookeeper:
#    image: zookeeper:3.7.0
#    ports:
#      - "2181:2181"
#    container_name: zookeeper
#    networks:
#      - kafka-network
#
#  kafka:
#    image: wurstmeister/kafka:latest
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_BROKER_ID: 1
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
#    depends_on:
#      - zookeeper
#    container_name: kafka_new
#    networks:
#      - kafka-network
#
#  mariadb:
#    image: mariadb:10.5
#    environment:
#      MYSQL_ROOT_PASSWORD: newpassword  # root 비밀번호 설정
#      MYSQL_DATABASE: boot_db
#      MYSQL_USER: boot
#      MYSQL_PASSWORD: boot
#
#    ports:
#      - "3306:3306"
#    container_name: mariadb
#    networks:
#      - kafka-network
#    healthcheck:
#      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#
#  springboot:
#    image: rookies_talk_app
#    ports:
#      - "8080:8080"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:mariadb://mariadb:3306/boot_db
#      SPRING_DATASOURCE_USERNAME: boot
#      SPRING_DATASOURCE_PASSWORD: boot
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: localhost:9092
#    depends_on:
#      mariadb:
#        condition: service_healthy
#      kafka:
#        condition: service_started
#    networks:
#      - kafka-network
#
#networks:
#  kafka-network:
#    driver: bridge
#
version: '3'
services:
  zookeeper:
    image: zookeeper:3.7.0
    ports:
      - "2181:2181"
    container_name: zookeeper
    networks:
      - kafka-network

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_MESSAGE_MAX_BYTES: 104857600  # 100MB
      KAFKA_REPLICA_FETCH_MAX_BYTES: 104857600  # 100MB
    depends_on:
      - zookeeper
    container_name: kafka_new
    networks:
      - kafka-network

  mariadb:
    image: mariadb:10.5
    environment:
      MYSQL_ROOT_PASSWORD: newpassword  # root 비밀번호 설정
      MYSQL_DATABASE: boot_db
      MYSQL_USER: boot
      MYSQL_PASSWORD: boot

    ports:
      - "3306:3306"
    container_name: mariadb
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      #test: "NONE"
      interval: 10s
      timeout: 5s
      retries: 2

  springboot:
    image: hsj1024/rookies_talk_app:latest  # Docker Hub에서 이미지 get
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://mariadb:3306/boot_db
      SPRING_DATASOURCE_USERNAME: boot
      SPRING_DATASOURCE_PASSWORD: boot
      SPRING_KAFKA_BOOTSTRAP_SERVERS: localhost:9092
    depends_on:
      mariadb:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge
