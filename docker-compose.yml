version: '3'
services:
  zookeeper:
    image: zookeeper:3.7.0
    ports:
      - "2181:2181"
    container_name: zookeeper
    networks:
      - kafka-network

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_new:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_MESSAGE_MAX_BYTES: 104857600  # 100MB
      KAFKA_REPLICA_FETCH_MAX_BYTES: 104857600  # 100MB
    depends_on:
      - zookeeper
    container_name: kafka_new
    networks:
      - kafka-network

  mariadb:
    image: mariadb:10.5
    environment:
      MYSQL_ROOT_PASSWORD: maria  # root 비밀번호 설정
      MYSQL_DATABASE: boot_db
      MYSQL_USER: boot
      MYSQL_PASSWORD: boot
    ports:
      - "3306:3306"
    container_name: mariadb
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 2

  springboot:
    image: hsj1024/rookies_talk_app:latest  # Docker Hub에서 이미지 get
    ports:
      - "8080:8080"
    environment:
      DB_HOST: mariadb
      DB_PORT: 3306
      DB_DATABASE: boot_db
      DB_USERNAME: boot
      DB_PASSWORD: boot
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka_new:9092
    depends_on:
      - mariadb
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge
